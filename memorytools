#!/bin/bash
# Script written by Warith Al Maawali  
# (c) 2022 Founder of Eagle Eye Digital Solutions
# Discord channel https://discord.gg/KEFErEx
# Twitter http://twitter.com/warith2020
# Linkedin http://www.linkedin.com/in/warith1977
# http://www.digi77.com
# http://www.om77.net
# Kodachi  OS/Software/Code are strictly protected by LICENSE terms at /home/kodachi/LICENSE
#
#
# script starts here:

#CS
#Find mount labels
#findmnt -lo source,target,fstype,label,options,used

cd $(dirname $0) 
source Globalconfig;
parm1=$1;

while true
do
	if [[ ! -n $parm1 ]] 
	then
		userInput=0;
		clear;
		echo "Please choose how the memory tool you would like to run:";
		echo "";
		print_good "1) Normal memory clean";
		print_good "2) Force memory clean";
		print_good "3) Memory wipe";
		print_good "4) Memory wipe then shutdown";
		print_good "5) Memory watch";
		print_good "6) Memory usage";
		print_good "7) keyboard keys status";
		print_good "8) Exit";
		echo "";
		echo "Type the number of your selection";	
		read n;
	else
		n=$parm1;
	
	fi
	case $n in
		1) userInput=1;;
		2) userInput=2;;
		3) userInput=3;;
		4) userInput=4;;
		5) userInput=5;;
		6) userInput=6;;
		7) userInput=7;;
		8) userInput=8;;
		*) print_error "sorry wrong value";sleep 1;;
	esac



	if [[ $userInput = "8" ]]
	then
		print_good "bye";
		echo "";
		exit 1;
	fi


	if [[ $userInput = "5" ]]
	then
		clear;
		watch -n 3 cat /proc/meminfo;
		notify-send -i $notifyIcon "Memory watch on";
	fi


	if [[ $userInput = "6" ]]
	then
		clear;
		sudo ps_mem;
		echo "";
		read -n 1 -s -r -p "${reset}Press any key to continue.....";
	fi


	if [[ $userInput = "7" ]]
	then
		clear;
		echo "Keys status will be shown below:";
		echo -e "\n";
		xset q | grep "Num Lock";
		echo -e "\n";
		echo "";
		read -n 1 -s -r -p "${reset}Press any key to continue.....";
	fi



	if [[ $userInput = "1" ]]
	then
		#xP=$(id -u $LOGED_USER)
		if [[ $xP == 1000 ]] 
		then
			
			swapstatus=$(cat $Jason_file_name | jq -r .swapstatus);	        
			if [[ "$swapstatus" == *Yes* ]]
			then
				print_good "Restarting swap";
				sudo swapoff -a;
				sudo swapon -a;
			fi	
		fi
		#sudo sync; sudo echo 3 > /proc/sys/vm/drop_caches
		#sudo sync && sudo bash -c 'echo 3 > /proc/sys/vm/drop_caches';
		print_good "Running cleaning process";
		sudo sync && sudo echo 3 | sudo tee /proc/sys/vm/drop_caches;
		echo "";
		sudo free -h
		echo "";
		print_good "Ram-cache and the swap got cleared";
		notify-send -i $notifyIcon "Ram-cache and the swap got cleared";
		
		if [[ ! -n $parm1 ]] 
		then
			echo "";
			read -n 1 -s -r -p "${reset}Press any key to continue.....";
		else
			print_good "bye";
			echo "";
			exit 1;
		fi	
		
	fi


	if [[ $userInput = "2" ]]
	then
		goAhead=0;

		dialog --backtitle "This script will force $OS_name memory to be cleaned" \
		--title "Save your work $LOGED_USER might logged off!" \
		--yes-label "YES! force clean" --no-label "No I was just trying it" --yesno "Are you sure?" 6 40
		response=$?
		case $response in
			0) goAhead=1 ;;
			1) goAhead=0 ;;
			255) ctrl_c ;;
		esac
		 
		if [[ $goAhead == 1 ]]
		then
			notify-send -i $notifyIcon "Top app using the memory in $OS_name will be killed now
	If you still have issues keep running this script again";
			print_good "Top app using the memory in $OS_name will be killed now ff you still have issues keep running this script again";
			echo "";
			read -n 1 -s -r -p "${reset}Press any key to continue.....";
			echo -e "\n"
			sudo ps -eo pid --no-headers --sort=-%mem | head -1 | xargs sudo kill -9 ;
			echo -e "\n";
			print_good "Memory has been forced to be cleaned";
			echo -e "\n";
			notify-send -i $notifyIcon "Memory has been forced to be cleaned";
		else
			clear;
			
		fi
		if [[ ! -n $parm1 ]] 
		then
			echo "";
			read -n 1 -s -r -p "${reset}Press any key to continue.....";
		else
			print_good "bye";
			echo "";
			exit 1;
		fi	
	fi


	if [[ $userInput = "3" ]]
	then
		echo "";
		print_good "Wiping the Ram click on Ctrl c to quit";
		notify-send -i $notifyIcon "Wiping the Ram";
		echo "";
		sudo sdmem -v;
		if [[ ! -n $parm1 ]] 
		then
			echo "";
			read -n 1 -s -r -p "${reset}Press any key to continue.....";
		else
			print_good "bye";
			echo "";
			exit 1;
		fi	
	fi

	if [[ $userInput = "4" ]]
	then
		notify-send -i $notifyIcon "Wiping memory then shutting down later";
		print_good "Wiping memory then shutting down later click on Ctrl c to quit";
		
		#xP=$(id -u $LOGED_USER)
		if [[ $xP == 990 ]] 
		then
			sleep 2;
			notify-send -i $notifyIcon "You are on live system $OS_name will freez later on";
			print_good "You are on live system $OS_name will freez later on";
		fi
		
		echo "";
		read -n 1 -s -r -p "${reset}Press any key to continue.....";
		echo -e "\n"
		sudo sdmem -v;
		echo "";
		print_good "Shutting down $OS_name in 5 seconds click on Ctrl c to quit";
		sleep 5;
		sudo shutdown -h now;
		echo "";
		echo "";
		read -n 1 -s -r -p "${reset}Press any key to continue.....";
	fi

done;
